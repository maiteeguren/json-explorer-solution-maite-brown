{"ast":null,"code":"var _jsxFileName = \"/Users/maiteegurenbrown/Downloads/json-explorer-solution-maite-brown/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./styles.css\";\nimport demodata from \"./demo-data.json\";\nimport PropertyWrapper from \"./components/PropertyWrapper\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  var _this = this;\n  const [input, setInput] = useState('');\n  const [resp, setRespt] = useState(null);\n  const handleClick = path => {\n    let res = demodata;\n    let parsedPath = 'res';\n    console.log('path', path);\n    path.forEach(field => {\n      if (field && field !== 'res') {\n        res = res[field];\n        parsedPath = typeof field === 'string' ? `${parsedPath}.${field}` : `${parsedPath}[${field}]`;\n      }\n    });\n\n    // setInput(parsedPath)\n    if (res !== undefined) {\n      // @ts-ignore\n      setRespt(String(res));\n    }\n  };\n  const getContent = function (object, key) {\n    let path = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : ['res'];\n    const objectPath = [...path, key];\n    let onClick = () => handleClick(objectPath);\n    let clickable = true;\n    let content;\n    switch (typeof object[key]) {\n      case \"string\":\n        content = `'${object[key]}'`;\n        break;\n      case \"object\":\n        if (Array.isArray(object[key])) {\n          clickable = false;\n          onClick = () => {};\n          content = /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [\"[\", object[key].map((elem, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"{\", iterateObject(elem, [...objectPath, index]), \"}\"]\n            }, `${objectPath}-${index}`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 59\n            }, _this)), \"]\"]\n          }, void 0, true);\n          break;\n        }\n      default:\n        content = String(object[key]);\n        break;\n    }\n    return {\n      content,\n      onClick,\n      clickable\n    };\n  };\n  const iterateObject = (object, path) => {\n    return Object.keys(object).map(key => {\n      // @ts-ignore\n      const {\n        content,\n        onClick,\n        clickable\n      } = getContent(object, key, path);\n      return /*#__PURE__*/_jsxDEV(PropertyWrapper, {\n        property: key,\n        onClick: onClick,\n        clickable: clickable,\n        children: content\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this);\n    });\n  };\n  let timer;\n  const handleChange = value => {\n    const delay = 300;\n    setInput(value);\n    clearTimeout(timer);\n    timer = setTimeout(() => {\n      const path = value.split('.');\n      handleClick(path);\n    }, delay);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"property-input\",\n        className: \"label\",\n        children: \"Property\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"property-input\",\n        className: \"monospace text-box\",\n        value: input,\n        onChange: e => handleChange(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"monospace response\",\n      children: resp\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"label\",\n        children: \"Response\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"monospace text-box\",\n        children: iterateObject(demodata)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"UmUVsSTGBiulzxD4/BL/TcA4hhs=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","demodata","PropertyWrapper","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","_this","input","setInput","resp","setRespt","handleClick","path","res","parsedPath","console","log","forEach","field","undefined","String","getContent","object","key","arguments","length","objectPath","onClick","clickable","content","Array","isArray","children","map","elem","index","iterateObject","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","property","timer","handleChange","value","delay","clearTimeout","setTimeout","split","className","htmlFor","type","id","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/maiteegurenbrown/Downloads/json-explorer-solution-maite-brown/src/App.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./styles.css\";\nimport demodata from \"./demo-data.json\";\nimport PropertyWrapper from \"./components/PropertyWrapper\";\n\ntype Data = Record<string, any>\n\nexport default function App() {\n  const [input, setInput] = useState('')\n  const [resp, setRespt] = useState(null)\n\n  \n  const handleClick = (path: (string | number)[]) => {\n    let res = demodata\n    let parsedPath = 'res'\n\n    console.log('path', path)\n\n    path.forEach((field: string | number) => {\n      if (field && field !== 'res') {\n        res = res[field]\n        parsedPath = (typeof field === 'string' ? `${parsedPath}.${field}` : `${parsedPath}[${field}]`)\n      }\n    })\n\n    // setInput(parsedPath)\n    if (res !== undefined) {\n      // @ts-ignore\n      setRespt(String(res))\n    }\n  }\n\n  const getContent = (object: Data, key: string, path = ['res']) => {\n    const objectPath: (string| number)[] = [...path, key]\n    let onClick = () => handleClick(objectPath)\n    let clickable = true\n    let content\n\n    switch (typeof object[key]) {\n      case \"string\":\n        content = `'${object[key]}'`\n        break\n      case \"object\":     \n        if (Array.isArray(object[key])) {\n          clickable = false\n          onClick = () => {}\n\n          content = <>&#91;\n          {object[key].map((elem: Data, index: number) => <div key={`${objectPath}-${index}`}>&#123;{iterateObject(elem, [...objectPath, index])}&#125;</div>)}\n          &#93;\n          </>\n          break\n        }\n      default:\n          content = String(object[key])\n          break\n    }\n\n    return { content, onClick, clickable}\n  }\n\n  const iterateObject = (object: Data, path?: (string| number)[]) => {\n    return Object.keys(object).map((key) => {\n      // @ts-ignore\n      const { content, onClick, clickable} = getContent(object, key, path)\n\n      return (\n        <PropertyWrapper key={key} property={key} onClick={onClick} clickable={clickable}>\n          {content}\n        </PropertyWrapper>)\n    });\n  };\n\n  let timer: ReturnType<typeof setTimeout>;\n\n  const handleChange = (value: string) => {\n    const delay = 300\n    setInput(value)\n\n    clearTimeout(timer)\n    timer = setTimeout(() => {\n      const path = value.split('.')\n      handleClick(path)\n    }, delay)\n  }\n\n  return (\n    <div className=\"App\">\n      <div>\n        <label htmlFor=\"property-input\" className=\"label\">Property</label>\n        {/* @ts-ignore */}\n        <input type=\"text\" id=\"property-input\" className=\"monospace text-box\" value={input} onChange={(e) => handleChange(e.target.value)}/>\n      </div>\n      <div className=\"monospace response\">\n        {resp}\n      </div>\n      <div>\n        <div className=\"label\">Response</div>\n        <div className=\"monospace text-box\">{iterateObject(demodata)}</div>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}