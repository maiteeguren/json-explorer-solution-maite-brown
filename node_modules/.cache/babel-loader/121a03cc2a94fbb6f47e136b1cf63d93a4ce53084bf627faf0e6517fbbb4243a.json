{"ast":null,"code":"var _jsxFileName = \"/Users/maiteegurenbrown/Downloads/03335b5b-bfbf-4232-a090-e2384fe15525/src/App.tsx\";\nimport \"./styles.css\";\nimport data from \"./demo-data.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  const Wrapper = _ref => {\n    let {\n      property,\n      children\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"indented\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"clickable-property key\",\n        children: [property, \": \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this), children, \";\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this);\n  };\n  const iterateObject = object => {\n    return Object.keys(object).map(key => {\n      switch (typeof object[key]) {\n        case \"string\":\n          return /*#__PURE__*/_jsxDEV(Wrapper, {\n            property: key,\n            children: `\"${object[key]}\"`\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 13\n          }, this);\n        case \"boolean\":\n          return /*#__PURE__*/_jsxDEV(Wrapper, {\n            property: key,\n            children: object[key].toString()\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 18\n          }, this);\n        default:\n          if (Array.isArray(object[key])) {\n            return /*#__PURE__*/_jsxDEV(Wrapper, {\n              property: key,\n              children: [\"[\", object[key].map(elem => {\n                iterateObject(elem);\n              }), \"],\"]\n            }, key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 20\n            }, this);\n          } else {\n            return /*#__PURE__*/_jsxDEV(Wrapper, {\n              property: key,\n              children: [\"{\", iterateObject(object[key]), \"}\"]\n            }, key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 20\n            }, this);\n          }\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"property-input\",\n        children: \"Property\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"property-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Response\", /*#__PURE__*/_jsxDEV(\"div\", {\n        children: iterateObject(data)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["data","jsxDEV","_jsxDEV","App","Wrapper","_ref","property","children","className","fileName","_jsxFileName","lineNumber","columnNumber","iterateObject","object","Object","keys","map","key","toString","Array","isArray","elem","htmlFor","type","id","_c","$RefreshReg$"],"sources":["/Users/maiteegurenbrown/Downloads/03335b5b-bfbf-4232-a090-e2384fe15525/src/App.tsx"],"sourcesContent":["import \"./styles.css\";\nimport data from \"./demo-data.json\";\n\nexport default function App() {\n  const Wrapper = ({ property, children }: { property: string, children: any }) => {\n    return (\n      <div className=\"indented\">\n        <span className=\"clickable-property key\">{property}: </span>\n        {children};\n      </div>\n    )\n  };\n\n  const iterateObject = (object: any): any => {\n    return Object.keys(object).map((key) => {\n      switch (typeof object[key]) {\n        case \"string\":\n          return (\n            <Wrapper key={key} property={key}>\n              {`\"${object[key]}\"`}\n            </Wrapper>\n          );\n        case \"boolean\":\n          return <Wrapper key={key} property={key}>\n            {object[key].toString()}\n          </Wrapper>\n\n        default:\n          if (Array.isArray(object[key])) {\n            return <Wrapper key={key} property={key}>\n              [\n              {object[key].map((elem: any) => { iterateObject(elem) })}\n              ],\n            </Wrapper>\n\n          } else {\n            return <Wrapper key={key} property={key}>\n\n              &#123;\n              {iterateObject(object[key])}\n              &#125;\n            </Wrapper>\n\n          }\n      }\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <div>\n        <label htmlFor=\"property-input\">Property</label>\n        <input type=\"text\" id=\"property-input\" />\n      </div>\n\n      <div>\n        Response\n        <div>{iterateObject(data)}</div>\n        {/* <div>\n          <pre>{JSON.stringify(data, null, 2)}</pre>\n        </div>\n        ;{\" \"} */}\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}