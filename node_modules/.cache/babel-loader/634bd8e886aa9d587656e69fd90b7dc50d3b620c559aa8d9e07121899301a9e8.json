{"ast":null,"code":"var _jsxFileName = \"/Users/maiteegurenbrown/Downloads/03335b5b-bfbf-4232-a090-e2384fe15525/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./styles.css\";\nimport data from \"./demo-data.json\";\nimport Wrapper from \"./components/Wrapper\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  var _this = this;\n  const [input, setInput] = useState('');\n  const [resp, setRespt] = useState(null);\n  console.log(input);\n  console.log(resp);\n  const handleClick = path => {\n    let res = data;\n    let parsedPath = 'res';\n    path.forEach(field => {\n      res = res[field];\n      parsedPath = typeof field === 'string' ? `${parsedPath}.${field}` : `${parsedPath}[${field}]`;\n    });\n    setInput(parsedPath);\n    setRespt(res);\n  };\n  const iterateObject = function (object) {\n    let path = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    return Object.keys(object).map(key => {\n      let objectPath = [...path, key];\n      switch (typeof object[key]) {\n        case \"string\":\n          return /*#__PURE__*/_jsxDEV(Wrapper, {\n            property: key,\n            onClick: () => handleClick(objectPath),\n            children: `\"${object[key]}\"`\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, _this);\n        case \"boolean\":\n          return /*#__PURE__*/_jsxDEV(Wrapper, {\n            property: key,\n            onClick: () => handleClick(objectPath),\n            children: object[key].toString()\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, _this);\n        default:\n          if (Array.isArray(object[key])) {\n            return /*#__PURE__*/_jsxDEV(Wrapper, {\n              property: key,\n              children: [\"[\", object[key].map((elem, index) => {\n                // @ts-ignore\n                return /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [\"{\", iterateObject(elem, [...objectPath, index]), \"}\"]\n                }, void 0, true);\n              }), \"]\"]\n            }, key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, _this);\n          } else {\n            return /*#__PURE__*/_jsxDEV(Wrapper, {\n              property: key,\n              children: [\"{\", iterateObject(object[key], objectPath), \"}\"]\n            }, key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, _this);\n          }\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"property-input\",\n        children: \"Property\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"property-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Response\", /*#__PURE__*/_jsxDEV(\"div\", {\n        children: iterateObject(data)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"UmUVsSTGBiulzxD4/BL/TcA4hhs=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","data","Wrapper","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","_this","input","setInput","resp","setRespt","console","log","handleClick","path","res","parsedPath","forEach","field","iterateObject","object","arguments","length","undefined","Object","keys","map","key","objectPath","property","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","toString","Array","isArray","elem","index","className","htmlFor","type","id","_c","$RefreshReg$"],"sources":["/Users/maiteegurenbrown/Downloads/03335b5b-bfbf-4232-a090-e2384fe15525/src/App.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./styles.css\";\nimport data from \"./demo-data.json\";\nimport Wrapper from \"./components/Wrapper\";\n\nexport default function App() {\n  const [input, setInput] = useState('')\n  const [resp, setRespt] = useState(null)\n\n  console.log(input)\n  console.log(resp)\n\n  const handleClick = (path: string[]) => {\n    let res = data\n    let parsedPath = 'res'\n\n    path.forEach((field: string | number) => {\n      res = res[field]\n      parsedPath = (typeof field === 'string' ? `${parsedPath}.${field}` : `${parsedPath}[${field}]`)\n    })\n    setInput(parsedPath)\n    setRespt(res)\n  }\n\n  const iterateObject = (object: any, path = []) => {\n    return Object.keys(object).map((key) => {\n      let objectPath = [...path, key]\n\n      switch (typeof object[key]) {\n        case \"string\":\n        return (\n            <Wrapper key={key} property={key} onClick={() => handleClick(objectPath)}>\n              {`\"${object[key]}\"`}\n            </Wrapper>)\n        case \"boolean\":\n          return (\n            <Wrapper key={key} property={key} onClick={() => handleClick(objectPath)}>\n              {object[key].toString()}\n            </Wrapper>)\n        default:\n          if (Array.isArray(object[key])) {\n            return (\n              <Wrapper key={key} property={key}>\n                [\n                {object[key].map((elem: any, index: number) => {\n                  // @ts-ignore\n                  return <>&#123;{iterateObject(elem, [...objectPath, index])}&#125;</>\n                })}\n                ]\n              </Wrapper>\n            )\n          } else {\n            return (\n              <Wrapper key={key} property={key}>\n                &#123;\n                {/* @ts-ignore */}\n                {iterateObject(object[key], objectPath)}\n                &#125;\n              </Wrapper>\n            )\n\n          }\n      }\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <div>\n        <label htmlFor=\"property-input\">Property</label>\n        <input type=\"text\" id=\"property-input\" />\n      </div>\n\n      <div>\n        Response\n        <div>{iterateObject(data)}</div>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}