{"ast":null,"code":"var _jsxFileName = \"/Users/maiteegurenbrown/Downloads/03335b5b-bfbf-4232-a090-e2384fe15525/src/App.tsx\",\n  _s = $RefreshSig$();\nimport \"./styles.css\";\nimport data from \"./demo-data.json\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  var _this = this;\n  const [input, setInput] = useState('');\n  console.log(input);\n  const Wrapper = _ref => {\n    let {\n      path,\n      property,\n      children\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"indented\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: path ? \"clickable-property key\" : \"key\",\n        onClick: () => path ? setInput(path.join('.')) : {},\n        children: `${property}: `\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 7\n      }, this), \";\", children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 12\n    }, this);\n  };\n  const iterateObject = function (object) {\n    let path = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ['res'];\n    return Object.keys(object).map(key => {\n      let objectPath = [...path, key];\n      switch (typeof object[key]) {\n        case \"string\":\n          return /*#__PURE__*/_jsxDEV(Wrapper, {\n            path: objectPath,\n            property: key,\n            children: `\"${object[key]}\"`\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, _this);\n        case \"boolean\":\n          return /*#__PURE__*/_jsxDEV(Wrapper, {\n            path: objectPath,\n            property: key,\n            children: object[key].toString()\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, _this);\n        default:\n          if (Array.isArray(object[key])) {\n            return /*#__PURE__*/_jsxDEV(Wrapper, {\n              property: key,\n              children: [\"[\", object[key].map((elem, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [\"{\", iterateObject(elem, [...objectPath, index]), \"}\"]\n              }, void 0, true)), \"]\"]\n            }, key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 15\n            }, _this);\n          } else {\n            return /*#__PURE__*/_jsxDEV(Wrapper, {\n              property: key,\n              children: [\"{\", iterateObject(object[key], objectPath), \"}\"]\n            }, key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, _this);\n          }\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"property-input\",\n        children: \"Property\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"property-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Response\", /*#__PURE__*/_jsxDEV(\"div\", {\n        children: iterateObject(data)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"WVveI0ACa0LqOSOlGzu58xcz+KE=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["data","React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","_this","input","setInput","console","log","Wrapper","_ref","path","property","children","className","onClick","join","fileName","_jsxFileName","lineNumber","columnNumber","iterateObject","object","arguments","length","undefined","Object","keys","map","key","objectPath","toString","Array","isArray","elem","index","htmlFor","type","id","_c","$RefreshReg$"],"sources":["/Users/maiteegurenbrown/Downloads/03335b5b-bfbf-4232-a090-e2384fe15525/src/App.tsx"],"sourcesContent":["import \"./styles.css\";\nimport data from \"./demo-data.json\";\nimport React, { useState } from \"react\";\n\nexport default function App() {\n  const [input, setInput] = useState('')\nconsole.log(input)\n\n  const Wrapper = ({ path, property, children }: { path?: (string | number)[], property: string, children: React.ReactNode }) => {\n    return <div className=\"indented\">\n      <span className={path ? \"clickable-property key\" : \"key\"}\n      onClick={() => path ? setInput(path.join('.')) : {}}\n      >{`${property}: `}</span>;\n      {children}\n    </div>\n  }\n\n  const iterateObject = (object: any, path = ['res']) => {\n    return Object.keys(object).map((key) => {\n      let objectPath: (string | number)[] = [...path, key]\n\n      switch (typeof object[key]) {\n        case \"string\":\n        return (\n            <Wrapper key={key} path={objectPath} property={key}>\n              {`\"${object[key]}\"`}\n            </Wrapper>)\n        case \"boolean\":\n          return (\n            <Wrapper key={key} path={objectPath} property={key}>\n              {object[key].toString()}\n            </Wrapper>)\n        default:\n          if (Array.isArray(object[key])) {\n            return (\n              <Wrapper key={key} property={key}>\n                [\n                  {/* @ts-ignore */}\n                {object[key].map((elem: any, index: number) => <>&#123;{iterateObject(elem, [...objectPath, index])}&#125;</>)}\n                ]\n              </Wrapper>\n            )\n          } else {\n            return (\n              <Wrapper key={key} property={key}>\n                &#123;\n                {iterateObject(object[key], objectPath)}\n                &#125;\n              </Wrapper>\n            )\n\n          }\n      }\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <div>\n        <label htmlFor=\"property-input\">Property</label>\n        <input type=\"text\" id=\"property-input\" />\n      </div>\n\n      <div>\n        Response\n        <div>{iterateObject(data)}</div>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}