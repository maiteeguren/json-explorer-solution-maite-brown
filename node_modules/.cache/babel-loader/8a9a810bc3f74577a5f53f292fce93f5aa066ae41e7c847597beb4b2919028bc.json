{"ast":null,"code":"var _jsxFileName = \"/Users/maiteegurenbrown/Downloads/03335b5b-bfbf-4232-a090-e2384fe15525/src/App.tsx\",\n  _s = $RefreshSig$();\nimport \"./styles.css\";\nimport data from \"./demo-data.json\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [input, setInput] = useState('');\n  console.log(input);\n  const Wrapper = _ref => {\n    let {\n      path,\n      property,\n      clickable,\n      children\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"indented\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: clickable ? \"clickable-property key\" : \"key\",\n        onClick: () => clickable ? setInput(path.join('.')) : {},\n        children: `${property}: `\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 7\n      }, this), \";\", children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 12\n    }, this);\n  };\n  const iterateObject = (object, path) => {\n    const objectPath = path || ['res'];\n    return Object.keys(object).map(key => {\n      switch (typeof object[key]) {\n        case \"string\":\n          return /*#__PURE__*/_jsxDEV(Wrapper, {\n            path: objectPath,\n            property: key,\n            clickable: true,\n            children: `\"${object[key]}\"`\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this);\n        case \"boolean\":\n          return /*#__PURE__*/_jsxDEV(Wrapper, {\n            path: objectPath,\n            property: key,\n            clickable: true,\n            children: object[key].toString()\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this);\n        default:\n          if (Array.isArray(object[key])) {\n            return /*#__PURE__*/_jsxDEV(Wrapper, {\n              path: objectPath,\n              property: key,\n              children: [\"[\", object[key].map((elem, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [\"{\", iterateObject(elem, [...objectPath, index]), \"}\"]\n              }, void 0, true)), \"]\"]\n            }, key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 15\n            }, this);\n          } else {\n            return /*#__PURE__*/_jsxDEV(Wrapper, {\n              path: objectPath,\n              property: key,\n              children: [\"{\", iterateObject(object[key]), \"}\"]\n            }, key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this);\n          }\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"property-input\",\n        children: \"Property\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"property-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Response\", /*#__PURE__*/_jsxDEV(\"div\", {\n        children: iterateObject(data)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"WVveI0ACa0LqOSOlGzu58xcz+KE=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["data","React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","input","setInput","console","log","Wrapper","_ref","path","property","clickable","children","className","onClick","join","fileName","_jsxFileName","lineNumber","columnNumber","iterateObject","object","objectPath","Object","keys","map","key","toString","Array","isArray","elem","index","htmlFor","type","id","_c","$RefreshReg$"],"sources":["/Users/maiteegurenbrown/Downloads/03335b5b-bfbf-4232-a090-e2384fe15525/src/App.tsx"],"sourcesContent":["import \"./styles.css\";\nimport data from \"./demo-data.json\";\nimport React, { useState } from \"react\";\n\nexport default function App() {\n  const [input, setInput] = useState('')\nconsole.log(input)\n\n  const Wrapper = ({ path, property, clickable, children }: { path: string[], property: string, clickable?: boolean, children: React.ReactNode }) => {\n    return <div className=\"indented\">\n      <span className={clickable ? \"clickable-property key\" : \"key\"}\n      onClick={() => clickable ? setInput(path.join('.')) : {}}\n      >{`${property}: `}</span>;\n      {children}\n    </div>\n  }\n\n  const iterateObject = (object: any, path?: (any)[]): any => {\n    const objectPath = path || ['res']\n\n    return Object.keys(object).map((key) => {\n      switch (typeof object[key]) {\n        case \"string\":\n          return (\n            <Wrapper key={key} path={objectPath} property={key} clickable>\n              {`\"${object[key]}\"`}\n            </Wrapper>)\n        case \"boolean\":\n          return (\n            <Wrapper key={key} path={objectPath} property={key} clickable>\n              {object[key].toString()}\n            </Wrapper>)\n        default:\n          if (Array.isArray(object[key])) {\n            return (\n              <Wrapper key={key} path={objectPath} property={key}>\n                [\n                {object[key].map((elem: any, index) => <>&#123;{iterateObject(elem, [...objectPath, index])}&#125;</>)}\n                ]\n              </Wrapper>\n            )\n          } else {\n            return (\n              <Wrapper key={key} path={objectPath} property={key}>\n                &#123;\n                {iterateObject(object[key])}\n                &#125;\n              </Wrapper>\n            )\n\n          }\n      }\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <div>\n        <label htmlFor=\"property-input\">Property</label>\n        <input type=\"text\" id=\"property-input\" />\n      </div>\n\n      <div>\n        Response\n        <div>{iterateObject(data)}</div>\n      </div>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAO,cAAc;AACrB,OAAOA,IAAI,MAAM,kBAAkB;AACnC,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAExC,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxCS,OAAO,CAACC,GAAG,CAACH,KAAK,CAAC;EAEhB,MAAMI,OAAO,GAAGC,IAAA,IAAmI;IAAA,IAAlI;MAAEC,IAAI;MAAEC,QAAQ;MAAEC,SAAS;MAAEC;IAA+F,CAAC,GAAAJ,IAAA;IAC5I,oBAAOV,OAAA;MAAKe,SAAS,EAAC,UAAU;MAAAD,QAAA,gBAC9Bd,OAAA;QAAMe,SAAS,EAAEF,SAAS,GAAG,wBAAwB,GAAG,KAAM;QAC9DG,OAAO,EAAEA,CAAA,KAAMH,SAAS,GAAGP,QAAQ,CAACK,IAAI,CAACM,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAE;QAAAH,QAAA,EACvD,GAAGF,QAAQ;MAAI;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,KACzB,EAACP,QAAQ;IAAA;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EACR,CAAC;EAED,MAAMC,aAAa,GAAGA,CAACC,MAAW,EAAEZ,IAAc,KAAU;IAC1D,MAAMa,UAAU,GAAGb,IAAI,IAAI,CAAC,KAAK,CAAC;IAElC,OAAOc,MAAM,CAACC,IAAI,CAACH,MAAM,CAAC,CAACI,GAAG,CAAEC,GAAG,IAAK;MACtC,QAAQ,OAAOL,MAAM,CAACK,GAAG,CAAC;QACxB,KAAK,QAAQ;UACX,oBACE5B,OAAA,CAACS,OAAO;YAAWE,IAAI,EAAEa,UAAW;YAACZ,QAAQ,EAAEgB,GAAI;YAACf,SAAS;YAAAC,QAAA,EAC1D,IAAIS,MAAM,CAACK,GAAG,CAAC;UAAG,GADPA,GAAG;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAER,CAAC;QACd,KAAK,SAAS;UACZ,oBACErB,OAAA,CAACS,OAAO;YAAWE,IAAI,EAAEa,UAAW;YAACZ,QAAQ,EAAEgB,GAAI;YAACf,SAAS;YAAAC,QAAA,EAC1DS,MAAM,CAACK,GAAG,CAAC,CAACC,QAAQ,CAAC;UAAC,GADXD,GAAG;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAER,CAAC;QACd;UACE,IAAIS,KAAK,CAACC,OAAO,CAACR,MAAM,CAACK,GAAG,CAAC,CAAC,EAAE;YAC9B,oBACE5B,OAAA,CAACS,OAAO;cAAWE,IAAI,EAAEa,UAAW;cAACZ,QAAQ,EAAEgB,GAAI;cAAAd,QAAA,GAAC,GAElD,EAACS,MAAM,CAACK,GAAG,CAAC,CAACD,GAAG,CAAC,CAACK,IAAS,EAAEC,KAAK,kBAAKjC,OAAA,CAAAE,SAAA;gBAAAY,QAAA,GAAE,GAAM,EAACQ,aAAa,CAACU,IAAI,EAAE,CAAC,GAAGR,UAAU,EAAES,KAAK,CAAC,CAAC,EAAC,GAAM;cAAA,eAAE,CAAC,CAAC,EAAC,GAEzG;YAAA,GAJcL,GAAG;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAIR,CAAC;UAEd,CAAC,MAAM;YACL,oBACErB,OAAA,CAACS,OAAO;cAAWE,IAAI,EAAEa,UAAW;cAACZ,QAAQ,EAAEgB,GAAI;cAAAd,QAAA,GAAC,GAElD,EAACQ,aAAa,CAACC,MAAM,CAACK,GAAG,CAAC,CAAC,EAAC,GAE9B;YAAA,GAJcA,GAAG;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAIR,CAAC;UAGd;MACJ;IACF,CAAC,CAAC;EACJ,CAAC;EAED,oBACErB,OAAA;IAAKe,SAAS,EAAC,KAAK;IAAAD,QAAA,gBAClBd,OAAA;MAAAc,QAAA,gBACEd,OAAA;QAAOkC,OAAO,EAAC,gBAAgB;QAAApB,QAAA,EAAC;MAAQ;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAChDrB,OAAA;QAAOmC,IAAI,EAAC,MAAM;QAACC,EAAE,EAAC;MAAgB;QAAAlB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC,eAENrB,OAAA;MAAAc,QAAA,GAAK,UAEH,eAAAd,OAAA;QAAAc,QAAA,EAAMQ,aAAa,CAAC1B,IAAI;MAAC;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACjB,EAAA,CAhEuBD,GAAG;AAAAkC,EAAA,GAAHlC,GAAG;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}