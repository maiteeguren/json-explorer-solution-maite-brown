{"ast":null,"code":"var _jsxFileName = \"/Users/maiteegurenbrown/Downloads/03335b5b-bfbf-4232-a090-e2384fe15525/src/App.tsx\";\nimport \"./styles.css\";\nimport data from \"./demo-data.json\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  const Key = _ref => {\n    let {\n      property\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"clickable-property key\",\n      children: `${property}: `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 12\n    }, this);\n  };\n  const iterateObject = object => {\n    return Object.keys(object).map(key => {\n      switch (typeof object[key]) {\n        case \"string\":\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"indented\",\n            children: [/*#__PURE__*/_jsxDEV(Key, {\n              property: key\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 15,\n              columnNumber: 15\n            }, this), `\"${object[key]}\"`]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 13\n          }, this);\n        case \"boolean\":\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"indented\",\n            children: [/*#__PURE__*/_jsxDEV(Key, {\n              property: key\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 13\n            }, this), object[key].toString()]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 18\n          }, this);\n        default:\n          if (Array.isArray(object[key])) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"indented\",\n              children: [/*#__PURE__*/_jsxDEV(Key, {\n                property: key\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 13\n              }, this), \"[\", object[key].map(elem => /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [\"{\", iterateObject(object[key]), \"}\"]\n              }, void 0, true)), \"],\"]\n            }, key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 20\n            }, this);\n          } else {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"indented\",\n              children: [/*#__PURE__*/_jsxDEV(Key, {\n                property: key\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 13\n              }, this), \"{\", iterateObject(object[key]), \"}\"]\n            }, key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 20\n            }, this);\n          }\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"property-input\",\n        children: \"Property\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"property-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Response\", /*#__PURE__*/_jsxDEV(\"div\", {\n        children: iterateObject(data)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["data","jsxDEV","_jsxDEV","Fragment","_Fragment","App","Key","_ref","property","className","children","fileName","_jsxFileName","lineNumber","columnNumber","iterateObject","object","Object","keys","map","key","toString","Array","isArray","elem","htmlFor","type","id","_c","$RefreshReg$"],"sources":["/Users/maiteegurenbrown/Downloads/03335b5b-bfbf-4232-a090-e2384fe15525/src/App.tsx"],"sourcesContent":["import \"./styles.css\";\nimport  data from \"./demo-data.json\";\n\nexport default function App() {\n  const Key = ({ property }: { property: string }) => {\n    return <span className=\"clickable-property key\">{`${property}: `}</span>;\n  };\n\n  const iterateObject = (object: any): any => {\n    return Object.keys(object).map((key) => {\n      switch (typeof object[key]) {\n        case \"string\":\n          return (\n            <div key={key} className=\"indented\">\n              <Key property={key} />\n              {`\"${object[key]}\"`}\n            </div>\n          );\n        case \"boolean\":\n          return <div key={key} className=\"indented\">\n            <Key property={key} />\n            {object[key].toString()}\n          </div>;\n\n        default:\n          if (Array.isArray(object[key])) {\n            return <div key={key} className=\"indented\"> \n            <Key property={key} />\n            [\n            {object[key].map((elem: any) => <>&#123;{iterateObject(object[key])}&#125;</>)}\n            ],\n          </div>;\n          } else {\n            return <div key={key} className=\"indented\">\n            <Key property={key} />\n            &#123;\n            {iterateObject(object[key])}\n            &#125;\n          </div>;\n          }\n      }\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <div>\n        <label htmlFor=\"property-input\">Property</label>\n        <input type=\"text\" id=\"property-input\" />\n      </div>\n\n      <div>\n        Response\n        <div>{iterateObject(data)}</div>\n        {/* <div>\n          <pre>{JSON.stringify(data, null, 2)}</pre>\n        </div>\n        ;{\" \"} */}\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}